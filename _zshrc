#Brew asks for this after installing zsh
unalias run-help
autoload run-help
HELPDIR=/usr/local/share/zsh/help


# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# Set to this to use case-sensitive completion
# CASE_SENSITIVE="true"

# Comment this out to disable bi-weekly auto-update checks
# DISABLE_AUTO_UPDATE="true"

# Uncomm=nt to change how often before auto-updates occur? (in days)
# export UPDATE_ZSH_DAYS=13

# Uncomment following line if you want to disable colors in ls
# DISABLE_LS_COLORS="true"

# Uncomment following line if you want to disable autosetting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment following line if you want to disable command autocorrection
# DISABLE_CORRECTION="true"

# Uncomment following line if you want red dots to be displayed while waiting for completion
# COMPLETION_WAITING_DOTS="true"

## Comand Completion
fpath=(~/.zsh/completion $fpath)
autoload -Uz compinit && compinit -i


#aliases
alias tmux="TERM=screen-256color-bce tmux"
alias vi=vim
alias ls='ls -GF'
alias ll='ls -hl'
alias rm='rm -i'
alias cp='cp -i'
alias ag='ag --path-to-ignore ~/.ignore'

# Uncomment following line if you want to disable marking untracked files under
# VCS as dirty. This makes repository status check for large repositories much,
# much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

source ~/.antigen/antigen.zsh

# Load the oh-my-zsh's library.
antigen use oh-my-zsh

# Bundles from the default repo (robbyrussell's oh-my-zsh).
antigen bundle git
antigen bundle command-not-found
antigen bundle z
antigen bundle zsh-users/zsh-autosuggestions
antigen bundle zsh-users/zsh-syntax-highlighting
antigen bundle zsh-users/zsh-history-substring-search ./zsh-history-substring-search.zsh

# Load the theme.
antigen theme blinks

# Tell antigen that you're done.
antigen apply

zle -N zle-line-init

#Set VI for the commandline editor
set -o vi

#OS Specific stuff
OS=`uname -s`
if [[ $OS == "Darwin" ]]; then

	#Go stuff
	export GOPATH=$HOME/dev/go
	export GOROOT=/usr/local/go

	export PATH=$PATH:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/sbin:/home/${USER}/bin:$GOPATH/bin


	# python - homebrew style
	export PATH=$PATH

	# Set the path. Had this in .bash_login, but when i added bashrc it isn't run anymore....
	export PATH="/Users/$USER/Library/Android/android-sdk-mac_86/platform-tools:/Users/$USER/bin:/usr/local/bin:/usr/local/sbin:/opt/local/bin:/usr/local/mysql/bin:/Applications:$PATH"

	# Set the path for WireShark
	export PATH="/Users/$USER/bin/WireShark:$PATH"

	# Set the path for Android SDK
	export PATH="/Users/$USER/Library/Android/android-sdk-mac_86/tools:$PATH"

	#Mono Settings
	export PKG_CONFIG_PATH=/Library/Frameworks/Mono.framework/Versions/Current/lib/pkgconfig
	export MONO_PATH=/Library/Frameworks/Mono.framework/Versions/Current/share/NAnt/bin

	# Homebrew
	export PATH=/usr/local/opt/python/libexec/bin:/usr/local/bin:$PATH

	#Perl Settings
	export VERSIONER_PERL_PREFER_32_BIT=yes
	export VERSIONER_PERL_VERSION=5.12.3

	#Python Settings
	export PYTHONSTARTUP=$HOME/.pythonrc.py
	export WORKON_HOME=~/.virtualenvs
	source /usr/local/bin/virtualenvwrapper.sh

	#nvm
	export NVM_DIR="$HOME/.nvm"

	#Git
	export GIT_AUTHOR_EMAIL=kanwal@kahuja.com
	export GIT_AUTHOR_NAME="Kanwal Ahuja"
	export GIT_COMMITTER_NAME="$GIT_AUTHOR_NAME"
	export GIT_COMMITTER_EMAIL="$GIT_AUTHOR_EMAIL"

	gpb()
	{
		git push origin `git branch | awk '/\*/{print $2}'`
	}

	#ssh locale issues
	export LC_CTYPE=en_US.UTF-8
	export LC_ALL=en_US.UTF-8
	export LANGUAGE=en_US.UTF-8
	export LANG=en_US.UTF-8

	[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh" # This loads nvm
elif [[ $OS == "Linux" ]]; then
	git config --global --unset diff.external
fi


#Helper functions
mkcd () {
  mkdir "$1"
  cd "$1"
}
